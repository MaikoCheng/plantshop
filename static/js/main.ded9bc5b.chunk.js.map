{"version":3,"sources":["Nav.tsx","videos/video.mp4","Body.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Wrapper","styled","div","p","scrolled","Inner","Button","button","ButtonWrapper","Logo","LogoWrapper","Right","Nav","props","useState","HasScrolled","setHasScrolled","handleScroll","window","scrollY","useEffect","addEventListener","onClick","scroll","scrollToTop","Videoalia","video","VideoWrap","TextWrap","Maintext","h1","Maintext2","Body","autoPlay","loop","muted","src","Video","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAMMA,EAAUC,IAAOC,IAAV,+HAKY,SAACC,GAAD,OAAkBA,EAAEC,SAAa,UAAU,iBAI9DC,EAAQJ,IAAOC,IAAV,wHAOLI,EAASL,IAAOM,OAAV,qYAmBNC,EAAgBP,IAAOC,IAAV,kCAIbO,EAAOR,IAAOM,OAAV,mSAeJG,EAAcT,IAAOC,IAAV,8BAIXS,EAAQV,YAAOQ,EAAPR,CAAH,wSAkBI,SAASW,EAAKC,GACzB,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAe,WAChBC,OAAOC,SAAW,GACnBH,GAAe,GAGfA,GAAe,IAMrB,OAHEI,qBAAU,WACRF,OAAOG,iBAAiB,SAASJ,KACjC,IAEF,cAACjB,EAAD,CAASI,SAAUW,EAAnB,SACI,eAACV,EAAD,WACI,cAACK,EAAD,CAAaY,QAASC,gBAAOC,YAA7B,SACI,cAACf,EAAD,wBAEJ,eAACD,EAAD,WACI,cAACF,EAAD,qBACA,cAACA,EAAD,oBACA,cAACA,EAAD,yBAEJ,cAACK,EAAD,UAAO,cAAC,IAAD,WC1GJ,I,YAAA,MAA0B,kCCOnCc,EAAYxB,IAAOyB,MAAV,gNAYT1B,EAAUC,IAAOC,IAAV,2JAUPyB,EAAY1B,IAAOC,IAAV,6LAYT0B,EAAW3B,IAAOC,IAAV,sMAUR2B,EAAW5B,IAAO6B,GAAV,4JAQRC,EAAY9B,YAAO4B,EAAP5B,CAAH,6EAKA,SAAS+B,EAAMnB,GAC5B,OACE,eAAC,EAAD,WACI,cAACc,EAAD,UACI,cAACF,EAAD,CAAWQ,UAAQ,EAACC,MAAI,EAACC,OAAK,EAACC,IAAKC,MAExC,eAACT,EAAD,WACI,cAACC,EAAD,8BACA,cAACE,EAAD,mCC1DGO,MATf,WACE,OACE,qCACE,cAAC1B,EAAD,CAAKR,UAAU,IACf,cAAC4B,EAAD,QCKSO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ded9bc5b.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useState,useEffect } from 'react';\r\nimport {FaBars} from 'react-icons/fa';\r\nimport {animateScroll as scroll} from 'react-scroll';\r\n\r\nconst Wrapper = styled.div`\r\n\r\n    width: 100%;\r\n    height: 80px;\r\n    background: transparent;\r\n    background-color: ${ (p: INavProps) => p.scrolled ?   '#000000':'transparent'};\r\n\r\n`\r\n\r\nconst Inner = styled.div`\r\n    width: 100%;\r\n    height:100%;\r\n    display:flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nconst Button = styled.button`\r\n    color: white;\r\n    font-family: 'Roboto', sans-serif;\r\n    font-weight: bold;\r\n    font-size: 1.3rem;\r\n    width: 100px;\r\n    height:100%;\r\n    background:transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        border-bottom: 3px solid #5aff4b;\r\n    }\r\n    @media screen and (max-width: 768px) {\r\n        visibility: hidden;\r\n    }\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n    \r\n`\r\n\r\nconst Logo = styled.button`\r\n    color: white;\r\n    font-family: 'Roboto', sans-serif;\r\n    font-weight: bold;\r\n    font-size: 1.3rem;\r\n    width: 100px;\r\n    height:100%;\r\n    background:transparent;\r\n    align-self: left;\r\n    border: none;\r\n    cursor: pointer;\r\n    margin-left: 20px;\r\n\r\n`\r\n\r\nconst LogoWrapper = styled.div`\r\n\r\n`\r\n\r\nconst Right = styled(Logo)`\r\n    width: 100px;\r\n    margin-right: 20px;\r\n    display: flex;\r\n    font-size: 2rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n    visibility: hidden;\r\n    color:white;\r\n\r\n    @media screen and (max-width: 768px) {\r\n        visibility: visible;\r\n    }\r\n`\r\nexport interface INavProps {\r\n    scrolled: boolean;\r\n}\r\n\r\nexport default function Nav (props: INavProps) {\r\n    const [HasScrolled, setHasScrolled] = useState(false);\r\n    const handleScroll = () => {\r\n      if(window.scrollY >= 50){\r\n        setHasScrolled(true);\r\n  \r\n      }else{\r\n        setHasScrolled(false);\r\n      }\r\n    };\r\n    useEffect(() => {\r\n      window.addEventListener('scroll',handleScroll); \r\n    },[]);\r\n  return (\r\n    <Wrapper scrolled={HasScrolled}>\r\n        <Inner>\r\n            <LogoWrapper onClick={scroll.scrollToTop}>\r\n                <Logo>PLANTED</Logo>\r\n            </LogoWrapper>\r\n            <ButtonWrapper>\r\n                <Button>Plants</Button>\r\n                <Button>About</Button>\r\n                <Button>Contact</Button>\r\n            </ButtonWrapper>\r\n            <Right><FaBars/></Right>\r\n        </Inner>\r\n    </Wrapper>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/video.7da3ed5e.mp4\";","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport Video from './videos/video.mp4';\r\n\r\nexport interface IBodyProps {\r\n}\r\n\r\nconst Videoalia = styled.video`\r\n    top:0;\r\n    z-index: -1;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    -o-object-fit: cover;\r\n    object-fit: cover;\r\n    background-color: black;\r\n    filter: brightness(0.7);\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    top:0;\r\n    height: 90vh;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n`\r\n\r\nconst VideoWrap = styled.div`\r\n    z-index: -1;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`\r\n\r\nconst TextWrap = styled.div`\r\n    \r\n    position: absolute;\r\n    z-index: 3;\r\n    padding: 8px 24px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width:1200px;\r\n`\r\nconst Maintext = styled.h1`\r\n    font-family: 'Roboto', sans-serif;\r\n    font-weight: 700;\r\n    font-size: 56px;\r\n    color:white;\r\n    text-align: center;\r\n`\r\n\r\nconst Maintext2 = styled(Maintext)`\r\n\r\n    font-size: 40px;\r\n    font-style: italic;\r\n`\r\nexport default function Body (props: IBodyProps) {\r\n  return (\r\n    <Wrapper>\r\n        <VideoWrap>\r\n            <Videoalia autoPlay loop muted src={Video}/>\r\n        </VideoWrap>\r\n        <TextWrap>\r\n            <Maintext>YOU WANT PLANTS</Maintext>\r\n            <Maintext2>\"We have them\"</Maintext2>\r\n        </TextWrap>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Nav from './Nav';\r\nimport Body from './Body';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Nav scrolled={false}></Nav>\r\n      <Body></Body>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}